c,c++,api,mfc,java,c# 등 언어는 자기가 가장 자신있는거로 선택, 종류 엄청 많음
참고로 집에 vs2008 또는 vs2010 깔려 있는 사람은 c#으로 개발 추천. 왜냐면 함수제공이 판타스틱하다
또한 각 문항마다 질문은 모두 영어로 되어 있다. 지금 각 문항의 질문은 대충 한글로 번역해 놓은것 
기본적인 영어이므로 금방 해석가능하고 만약에 영 모르겠다 싶으면 직접 타자쳐서 구글번역기 돌리면 된다 근데 시간 아까우므로 그냥 해석하자 쉬운 단어들이다
3시간 동안 풀었고 task2는 sql 질문인데 이건 table구조가 생각이 안나서 못 적었고 나도 못풀었음 
sql이 그렇게 어려운 난이도는 아니었는데 쿼리 결과값이 안 떠서 삽질하다가 포기...ㅠ
sql 작성하는데 기대되지 않는 종료입니다라는 메시지 뜨면서 에러 발생 원인을 잘 모르겠음.사이트에서 select가 안 먹어서 제꼈다...ㅠㅠ

----------------------------------------------------------------------------------------------------------------------

task1
문자열을 전화번호나 숫자 포맷으로 만들어 리턴하는 함수를 만들어라
- 구분으로 반드시 3자씩 들어가야 되며, 맨 마지막에는 2자가 들어갈 수 있고, 마지막 2 블럭은 각 블럭마다 2자가 들어갈 수 있다
예를 들면 인풋이 "132 - 132 12 1231- 13213", 아웃풋은 "132-132-121-231-132-13" 이런형태로 반드시 리턴되야 되며
또다른 예로 인풋이 "54543 453 -5435-543--5435", 아웃풋은 "545-434-535-435-543-54-35" 이런형태로 반드시 리턴되야 된다
전제조건은 두개인데 인풋데이터에는 숫자와 - 밖에 존재하지 않는다(이건 정확함), 한개 더는 길이에 관한 내용인데 잘 모르겠음...

string solution(string s)
{
	// 코딩시작해라
}

----------------------------------------------------------------------------------------------------------------------

task3
다음의 제곱근을 리턴하는 함수를 만들어라
인풋으로 두개의 값이 들어간다
그러면 그 사이에 있는 다음의 제곱근 값을 찾아서 리턴하는 함수를 만들어라
예를 들면 인풋이 4, 17이면 리턴값은 3이다. 왜냐면 4의 제곱근은2, 17에서 작은쪽으로 가장 가까운 정수(16)의 제곱근은 4, 즉 2와 4 사이에 숫자는 3
또다른 예를 들면 인풋이 24, 64이면 24에서 작은쪽으로 가까운 제곱숫자는 16 즉 제곱근은 4, 64의 제곱근은 8이다 그러므로 다음에 값은 5(아래 설명)
즉 24(인풋값으로 4.XXXX의 제곱 -> 그러므로 정수4가 기준 -> 이러나 저러나 어쨋든 5보다는 작다) 25(5의 제곱) ~ 64(인풋값으로 8의 제곱) 이래서 5가 리턴됨
이런식으로 두 사이에 제곱근을 구하는것이다
전제조건은 인풋값은 무조건 정수 그리고 리턴값도 정수, 인풋데이터 숫자는 1~99999까지, 나머지 1개 전제조건은 모르겠음

int solution(int A, int B)
{
	// 코딩시작해라
}

----------------------------------------------------------------------------------------------------------------------


task4
가장 큰 문장의 단어 갯수를 리턴해라
인풋으로 문자열 1개가 들어가는데 문자열 구분은 '.', '?', '!' 이 3가지로 한다
쪼개진 각각의 문자열을 공백(' ')으로 구분해서 각각의 문자열로 최종적으로 쪼갠 후 가장 많은 단어로 이루어진 문자열의 갯수를 리턴
예를 들면 인풋으로 "afa fd fd sdf.fasd fdf ? fds fd ? fdf ! ff!" 들어간다면 
"afa fd fd sdf" , "fasd fdf ", " fds fd " , " fdf ", " ff", "" 이렇게 6 블럭으로 먼저 쪼개지고,
"afa fd fd sdf" -> 4, "fasd fdf " -> 2, " fds fd " -> 2, " fdf " -> 1, " ff" -> 1, "" -> 0 으로 블럭갯수가 구성되어 있으므로 반드시 4가 최종적으로 리턴
쉽게 말해 각각의 토큰으로 두번 쪼개야 되고, 두번째로 쪼개진 문자열 중 가장 많은 블록으로 구성된 문자열의 블럭 갯수를 리턴
또한 만약에 갯수가 예를 들면 4,4,2,2 로 가장 큰 숫자가 겹쳐도 상관없이 4리턴

전제조건은 인풋 문자열에 '.', '?', '!', ' ' 4개의 토근외에 다른토큰은 존재하지 않는다
두번째는 인풋 문자열 안에 문자는 모두 a~z,A~Z 로만 구성되어 있다


int solution(string s)
{
	// 코딩시작해라
}